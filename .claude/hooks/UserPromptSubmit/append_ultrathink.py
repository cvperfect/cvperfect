#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ULTRATHINK MODE ENFORCER
Aktywuje tryb maksymalnej analizy z bud≈ºetem 128K token√≥w
"""

import sys
import io

# Fix Windows encoding
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

def main():
    message = sys.argv[1] if len(sys.argv) > 1 else ""
    
    # Wzorce wymagajƒÖce ultrathink
    ultrathink_patterns = [
        "complex", "architecture", "debug", "performance", 
        "optimize", "refactor", "analyze", "security",
        "z≈Ço≈ºony", "architektura", "wydajno≈õƒá", "optymalizuj"
    ]
    
    should_ultrathink = any(pattern in message.lower() for pattern in ultrathink_patterns)
    
    if should_ultrathink:
        enhanced = message + """

üß† ULTRATHINK_MODE_ACTIVATED 
‚úÖ Maximum analysis budget: 128K tokens
‚úÖ Extended reasoning enabled
‚úÖ Deep problem analysis required
‚úÖ Multi-step verification mandatory

EXECUTION_REQUIREMENTS:
‚Ä¢ Use maximum thinking time before responding
‚Ä¢ Break complex problems into sub-components  
‚Ä¢ Verify each step before proceeding
‚Ä¢ Apply CVPerfect 21 mandatory rules

‚ö†Ô∏è HIGH_COMPLEXITY_TASK_DETECTED - Ultrathink mode required for optimal results."""
        
        print(enhanced)
    else:
        print(message)

if __name__ == "__main__":
    main()