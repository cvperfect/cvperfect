{
  "permissions": {
    "allow": [
      "Bash(npx:*)",
      "Bash(npm install:*)",
      "Bash(echo $HOME)",
      "Bash(mkdir:*)",
      "Bash(node:*)",
      "Bash(npm run mcp-puppeteer:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(npm run lint:*)",
      "Bash(rm:*)",
      "Bash(curl:*)",
      "WebSearch",
      "Bash(dir:*)",
      "WebFetch(domain:cvperfect.pl)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(sed:*)",
      "Bash(start http://localhost:3001)",
      "Bash(start http://localhost:3002)",
      "Bash(start http://localhost:3004)",
      "Bash(timeout:*)",
      "Bash(del:*)",
      "Bash(grep:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(git restore:*)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(taskkill:*)",
      "Bash(cmd /c:*)",
      "Bash(PORT=3015 npm run dev)",
      "Bash(PORT=3001 npm run dev)",
      "WebFetch(domain:localhost)",
      "Bash(copy:*)",
      "Bash(/dev/null)",
      "Bash(chmod:*)",
      "Bash(bash:*)",
      "Bash(pkill:*)",
      "Bash(lsof:*)",
      "Read(/C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect/**)",
      "Read(/C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect\\pages/**)",
      "Read(/C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect\\pages\\api/**)",
      "Read(/C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect\\components/**)",
      "Read(/C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect\\lib/**)",
      "Read(/C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect\\agents/**)",
      "Read(/C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect\\.claude/**)",
      "Read(/C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect\\.claude\\hooks/**)",
      "Read(/C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect\\.claude\\test-snapshots/**)",
      "Read(/C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect\\.claude\\regression-reports/**)",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_file_upload",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_tabs",
      "Bash(find:*)",
      "Bash(git grep:*)",
      "Bash(npm run -s lint)",
      "Bash(if [ -d \".claude/hooks\" ])",
      "Bash(then git mv .claude/hooks/* .claude/hooks_quarantine/)",
      "Bash(fi)",
      "Bash(for:*)",
      "Bash(do if [ -f \".claude/hooks_quarantine/$f\" ])",
      "Bash(then git mv \".claude/hooks_quarantine/$f\" \".claude/hooks/$f\")",
      "Bash(done)",
      "Bash(git rm:*)",
      "Bash(cat:*)",
      "Bash(do echo \"Processing $file...\")",
      "Bash(tail:*)",
      "Bash(npm run:*)",
      "Bash(tasklist:*)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(BASE_URL=http://localhost:3015 node -e \"\nconst BASE_URL = process.env.BASE_URL || ''http://localhost:3015'';\n\n// Test performance metrics API with a simple metric\nfetch(BASE_URL + ''/api/performance-metrics'', {\n  method: ''POST'',\n  headers: { ''Content-Type'': ''application/json'' },\n  body: JSON.stringify({\n    metric_name: ''TEST'',\n    metric_value: 100,\n    metric_data: { test: true },\n    timestamp: new Date().toISOString(),\n    user_agent: ''Node.js Test'',\n    url: BASE_URL + ''/test''\n  })\n}).then(res => res.json()).then(data => {\n  console.log(''‚úÖ Performance Metrics API Test:'', data.success ? ''PASSED'' : ''FAILED'');\n  console.log(''   Response:'', JSON.stringify(data, null, 2));\n}).catch(err => {\n  console.log(''‚ùå Performance Metrics API Test: FAILED'');\n  console.log(''   Error:'', err.message);\n});\n\")",
      "Bash(echo 'üß™ TEST PAYLOADS FOR PERFORMANCE METRICS API\n===========================================\n\n‚úÖ Test Payload 1 (Core Web Vitals):\n{\n  \"\"metric_name\"\": \"\"LCP\"\",\n  \"\"metric_value\"\": 2250.5,\n  \"\"timestamp\"\": \"\"2025-01-28T10:00:00Z\"\",\n  \"\"user_agent\"\": \"\"Mozilla/5.0 Test\"\",\n  \"\"url\"\": \"\"/\"\"\n}\n\n‚úÖ Test Payload 2 (Custom Metrics):\n{\n  \"\"metric_name\"\": \"\"CUSTOM_METRICS\"\",\n  \"\"metric_value\"\": 3200,\n  \"\"metric_data\"\": {\n    \"\"pageLoadTime\"\": 3200,\n    \"\"bundleSize\"\": 290000,\n    \"\"memoryUsage\"\": {\"\"usedJSMemory\"\": 42000000},\n    \"\"chunkLoadTime\"\": 450\n  },\n  \"\"timestamp\"\": \"\"2025-01-28T10:01:00Z\"\",\n  \"\"user_agent\"\": \"\"Mozilla/5.0 Test\"\",\n  \"\"url\"\": \"\"/\"\"\n}\n\nüîç CURL TEST COMMAND:\ncurl -X POST http://localhost:3000/api/performance-metrics \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -d '\"''\"'{\"\"metric_name\"\":\"\"LCP\"\",\"\"metric_value\"\":2250.5,\"\"timestamp\"\":\"\"2025-01-28T10:00:00Z\"\",\"\"user_agent\"\":\"\"Mozilla/5.0 Test\"\",\"\"url\"\":\"\"/\"\"}'\"''\"'\n\n‚úÖ Expected Response: {\"\"success\"\": true, \"\"message\"\": \"\"Metric stored successfully\"\"}')",
      "Bash(set NEXT_PUBLIC_SUPABASE_URL=https://cpuotzkxnaitiwdsrzgd.supabase.co)",
      "Bash(set SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNwdW90emt4bmFpdGl3ZHNyemdkIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzkyODg3MSwiZXhwIjoyMDY5NTA0ODcxfQ.m2VnZ0giB-NnS-t66ZvrqbO8GsQLNheOlEThAbB2zr8)",
      "Bash(echo:*)",
      "Bash(touch:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect",
      "C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect1\\.claude",
      "c:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect1\\.claude"
    ]
  },
  "cvperfect_local": {
    "project_root": "C:\\Users\\czupa\\OneDrive\\Pulpit\\cvperfect",
    "development_server": {
      "primary_port": 3001,
      "fallback_port": 3000,
      "backup_port": 3002
    },
    "testing": {
      "enable_comprehensive_tests": true,
      "enable_regression_guard": true,
      "auto_snapshot_on_changes": true
    },
    "agents": {
      "auto_start_on_session": true,
      "cvperfect_agents_enabled": true,
      "debug_agents_enabled": true
    },
    "superclaud": {
      "enforcement_level": "strict",
      "auto_apply_features": true,
      "mandatory_compliance": true
    }
  }
}